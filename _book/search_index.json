[
["index.html", "The twinetverse Chapter 1 Prerequisites", " The twinetverse John Coene 2018-07-02 Chapter 1 Prerequisites The goal of the twinetverse is to provide everything one might need efficiently and elegantly visualise Twitter interactions. The twinetverse package can be installed from Github: devtools::install_github(&quot;JohnCoene/twinetverse&quot;) "],
["intro.html", "Chapter 2 Introduction", " Chapter 2 Introduction The twinetverse includes three packages: rtweet graphTweets sigmajs Within the context of visualising Twitter interactions, each of the packages listed above fill in a specific need and a distinct step of the process, 1) collecting the data, 2) building the graphs and finally 3) visualising the graphs. In the following section we look at each individual package and what they bring to the twinetverse. "],
["pkgs.html", "Chapter 3 Packages 3.1 rtweet 3.2 graphTweets 3.3 sigmajs", " Chapter 3 Packages Below are the packages that are included in the twinetverse and what they bring to our endeavour of visualising Twitter interactions. 3.1 rtweet If we are going to visualise Twitter interactions we are going to need data, namely tweets. The rtweet package wraps the Twitter API, thereby giving R users easy access to tweets. The rtweet package requires some set up. This is not only extremely easy but also very well explained on rtweet’s official website, so head over there if the short description below does not satisfy. In essence, you will need a Twitter “app” to access its API (via rtweet), to create one: Head over to apps.twitter.com and login or signup if you do not have a Twitter account. Click create an app. In the following form, enter an app name, whatever you want, this does not matter. Enter a description, then again, it doesn’t matter. Website, simply put a valid website, you can link to your Twitter profile if you do not have one, i.e.: https://twitter.com/jdatap Callback URL, this is important, in there put the following: http://127.0.0.1:1410. You’re now setup, take note of the following under “Keys abd Access Tokens”, as you will need it to create your token and fetch tweets: Consumer Key (API Key) Consumer Secret (API Secret) Access Token Access Token Secret rtweet fills the very first step in visualising Twitter interactions, collecting the necessary data. Note that the package lets you do much more than simply downloading tweets, however, this is its main function within the twinetverse. 3.2 graphTweets The graphTweets package lets you build lists of nodes and edges from tweets collected with rtweet. The package is faily straighforward and inludes but a few functions. However it still enables you to extract valuable variables to build dynamic graphs. graphTweets fills the seecond step in visualising Twitter interactions, building the graphs from the collected data. 3.3 sigmajs sigmajs is a powerful library to visualise the networks we have built using graphTweets. The package, like graphTweets, is pipe-friendly (%&gt;%), therefore making it easy to go from building a graph to visualising it. It can also easily let you visualise dynamic networks, which is otherwise not evident in R. Features: Highly interactive Crosstalk integrated Includes Shiny proxies Events in Shiny Buttons to trigger interactions. and more. sigmajs is the final piece of the puzzle, **visualising* the graphs we have built. "],
["methods.html", "Chapter 4 Methods", " Chapter 4 Methods We describe our methods in this chapter. "],
["applications.html", "Chapter 5 Applications 5.1 Example one 5.2 Example two", " Chapter 5 Applications Some significant applications are demonstrated in this chapter. 5.1 Example one 5.2 Example two "],
["final-words.html", "Chapter 6 Final Words", " Chapter 6 Final Words We have finished a nice book. "],
["references.html", "References", " References "]
]
